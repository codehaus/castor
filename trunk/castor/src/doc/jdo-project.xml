<?xml version="1.0" encoding="ISO-8859-1"?>
<document url="http://castor.exolab.org/jdo-project.xml">
  <properties>
    <title>Castor JDO Project Plan</title>
    <author email="ferret@frii.com">Bruce Snyder</author>
    <abstract>
    This document outlines all work that has been identified for Castor JDO. 
    </abstract>
    <status>Draft</status>
  </properties>

  <body>
    <title>Castor JDO Refactoring Project Plan</title>

    <section title="Introduction">

      <p>
      Below is a list of tasks that have been identified for refactoring
      in Castor JDO. This list is continually evolving and should be checked
      often. There are no scheduled release dates for these items. This
      is because Castor JDO is entirely a volunteer effort and team members
      contribute in their spare time. Some of these tasks are in progress 
      and some have not been started at all.
      </p>

      <p>
      There is always plenty of work to be done. If you would like to 
      participate, please let us know. If you see a task that you would 
      like to work on please let us know. I you see a task that you would 
      like to work on but has already been assigned to someone, that doesn't 
      mean that you can't help out or even take it over. Simply contact the 
      JDO project leader (available <a href="http://www.castor.org/contributors.html">
      here</a>). 
      </p>

    </section>

    <section title="Tasks">

        <section title="Logging Refactoring">
        <p>
        <b>Description:</b><br />
        Switching the logging mechanism in Castor 
        over to using the <a href="http://jakarta.apache.org/commons/logging.html">
        Jakarta Commons Logging</a> with Log4J as the default logger. 
        Not only will this help to improve the logging quality, but it will
        also allow users to choose their logging framework of choice. 
        </p>
        <p>
        <b>Volunteer:</b> Bruce Snyder<br />
        <b>Status:</b> started<br />
        <b>Date Started:</b> 5 May 2003<br />
        <b>Notes:</b><br />
        Not sure if Jakarta Commons Logging should be used in Castor
        because of the inability to configure some finer features in Log4J.
        See <a
        href="http://www.zdnet.com.au/builder/program/java/story/0,2000034779,20272367,00.htm">this
        article</a> for some info. This article may be talking about
        programmatic configuration of Log4J which I'm not really worried
        about. All of the configuration in Castor will take place in a
        properties or XML file. <br />
        </p>
        </section>

        <section title="CTF-JDO Improvements">
        <p>
        <b>Description:</b><br />
        Writing test cases is a critical effort to the 
        evolution of Castor JDO. All bug fixes and new functionality must contain 
        test cases unless the bug fix is trivial. All test cases are written
        using the Castor Test Framework for JDO 
        (<a href="testing-framework.html">CTF-JDO</a>). 
        </p>
        <p>
        The verison of <a href="http://junit.org">JUnit</a> used by Castor is
        quite outdated (version 3.5). This needs to be updated to the latest
        version (as of this writing, version 3.8.1). There is a certain amount
        of work involved with this in changing all assert() calls to the
        newer, more specific assert calls (e.g. assertTrue(), assertEquals(),
        assertNull(), assertNotNull(), etc.). Also look into the use of 
        <a href="http://www.openfuture.de/Log4Unit/">Log4Unit</a> as opposed
        to JUnit. Log4Unit is an extension to JUnit that provides a logging
        component to JUnit to provide better logging for both failures and
        successes. 
        </p>
        <p>
        In addition to using JUnit, a database specific extension to JUnit
        called <a href="http://dbunit.sf.net/">DbUnit</a> should be
        considered. DbUnit helps to manage test data sets by
        importing/exporting flat XML data sets to/from a database for each
        test or set of tests being executed. 
        </p>
        <p>
        <b>Volunteer:</b> Bruce Snyder<br />
        <b>Status:</b> not started<br />
        <b>Date Started:</b><br />
        <b>Notes:</b><br />
        </p>
        </section>

        <section title="OQL Engine Refactoring">
        <p>
        <b>Description:</b><br />
        The Castor OQL engine should be refactored to make us of
        <a href="http://antlr.org">ANTLR</a>. This will make maintenance and
        adding features incredibly easier. 
        </p>
        <p>
        <b>Volunteer:</b> Paul Botta<br />
        <b>Status:</b> implemenation complete<br />
        <b>Date Started:</b><br />
        <b>Notes:</b><br />
        Many thanks to Paul Botta for his hard work on this implemenation. Now it 
        just needs some tests to prove it so that it can be committted it to CVS. 
        </p>
        </section>

        <section title="ClassMolder Refactoring">
        <p>
        <b>Description:</b><br />
        The ClassMolder should be broken up into several classes to make use 
        of a dual <a
        href="http://www.ootips.org/strategy-vs-case.html">strategy pattern</a>.
        </p>
        <p>
        <b>Volunteer:</b><br />
        <b>Status:</b> not started<br />
        <b>Date Started:</b><br />
        <b>Notes:</b><br />
        </p>
        </section>

        <section title="J2EE Transaction Factory">
        <p>
        <b>Description:</b><br />
        In 2002 I started adding an API for a TransactionManagerFactory so that 
        Castor JDO can make use of a J2EE container's transaction manager 
        (e.g. JBoss, Weblogic, Websphere, etc.).
        </p>
        <p>
        <b>Volunteer:</b> Werner Guttmann/Bruce Snyder<br />
        <b>Status:</b> started<br />
        <b>Date Started:</b> Apr 2003<br />
        <b>Notes:</b><br />
        Werner and I have been working together to get this implemenation
        working. It's proceeding and I expect that it will be working by the
        end of May 2003.
        </p>
        </section>

        <section title="Cache Refactoring">
        <p>
        <b>Description:</b><br />
        Castor's current cache implemenation is not that robust. It lacks any
        procedure for manual object eviction and it should really be using
        some sort of balanced tree (e.g. java.util.TreeMap) for reasons of
        speed. Also, there should really be an API for the cache rather than
        just using the API from a java.util.Collection. 
        </p>
        <p>
        Note that Vince Adamo has posted a <a
        href="http://bugzilla.exolab.org/show_bug.cgi?id=1091">patch</a> for 
        object eviction in the current Castor API. 
        </p>
        <p>
        <b>Volunteer:</b><br />
        <b>Status:</b> open<br />
        <b>Date Started:</b><br />
        <b>Notes:</b><br />
        </p>
        </section>

        <section title="Must Fix Bugs">
        <p>
        <b>Description:</b><br />
        There are a few bugs that *must* be fixed, specifically 
        <a href="http://bugzilla.exolab.org/show_bug.cgi?id=986">986</a>, 
        <a href="http://bugzilla.exolab.org/show_bug.cgi?id=925">925</a>, 
        <a href="http://bugzilla.exolab.org/show_bug.cgi?id=997">997</a>. 
        These bugs have been around for quite a while and should have been 
        fixed long ago. 
        </p>
        <p>
        <b>Volunteer:</b><br />
        <b>Status:</b> not started<br />
        <b>Date Started:</b><br />
        <b>Notes:</b><br />
        </p>
        </section>

        <section title="Javadoc improvements">
        <p>
        <b>Description:</b><br />
        This task surrounds the effort to continually improve the code
        documentation including code examples, adding an <tt>@author</tt> tag 
        to any class you modify, etc. This task must be carried 
        out by everyone.
        </p>
        <p>
        <b>Volunteer:</b><br />
        <b>Status:</b> ongoing<br />
        <b>Date Started:</b><br />
        <b>Notes:</b><br />
        </p>
        </section>

    </section>

  </body>
</document>
