<?xml version="1.0"?>
<?xml-stylesheet href="style/exolab.xsl" type="text/xsl"?>
<document id="ELPD-2000-01-07-KV01-PR" project="../project.xml">
<properties>
 <title>The Source Code Generator</title>
  <authors>
    <author email="kvisco@exoffice.com">
       <firstname>Visco</firstname>
       <lastname>Keith</lastname>
   </author>
 </authors>
 <title>Using Castor</title>
 <abstract>
   Castor is an XML Databinding framework for Java(tm)
 </abstract>
  <status>Preliminary Draft</status>
</properties>
<body>
<section title="Introduction">
<p>
  Castor's source code generator creates a set of Java classes
  which represent an object model for an XML Schema
  (W3C XML Schema, 19991105 Working Draft). The generated source
  files will need to be compiled.
</p>

<p>

Example:
<br/><pre>
java org.exolab.castor.builder.SourceGenerator -i foo-schema.xsd -package com.xyz
</pre>
</p>
<p>
This will generate a set of source files from the the XML Schema, foo-schema.xsd,
and place them in the com/xyz/* package.
</p>
<p>
To compile the generated classes simply run javac, or your favorite compiler:
<br/><pre>javac com/xyz/*.java</pre>
</p>

<p>
Created class will have marshal and unmarshal methods which are used to go back
and forth between XML and an Object instance.
</p>
</section>

<section title="Supported Types" ref-id="types">
The following is a list of supported XML Schema types.

<ul> Base (primitive) datatypes
  <li>binary</li>
  <li>boolean</li>
  <li>integer</li>
  <li>real</li>
  <li>string</li>
  <li>timeInstant</li>
</ul>

<ul> Generated datatypes
   <li>NCName</li>
   <li>NMToken</li>
   <li>positive-integer - new since 0.7.3</li>
   <li>negative-integer - new since 0.7.3</li>
</ul>
</section>

<section title="Supported XML Schema Structures">

The supported structures for XML Schema is currently limited to:

<ul> structural elements
   <li>archetype</li>
   <li>elements</li>
   <li>attribute</li>
   <li>datatype - not complete (see <ref name="types"/>)</li>
</ul>
<ul> Supported facets
   <li>maxExclusive</li>
   <li>minExclusive</li>
   <li>maxInclusive</li>
   <li>minInclusive</li>
</ul>


<note>
Grouping support will be added in release 0.8
</note>

</section>
</body>
</document>
