<?xml version="1.0" encoding="ISO-8859-1"?>
<document url="http://castor.exolab.org/changelog.xml">
  <body>
    <title>Change log</title>
    <section title="Version 0.7.11  March 10, 2000"><pre>
JDO:     Added support for one-many relations using the new mapping/persist
         mechanisms. Retains support for one-one relations.

Mapping: Introduced CollectionHandler and support for collection fields
         (for one-one and one-many relations), with support for three basic
         collection types: vectors, hashtable, and arrays.

Persist: Added support for attached and non attached relations, singular and
         multi, in both query and commit phase. Required new algorithm for
         preparing the transaction to commit.

Persist: Fixed bug in ObjectLock that could lead to deadlock detection when
         there are more than two threads competing for the same object.
         (contributed by Jim Alateras)

Misc:    Updated build.xml file now builds docs tarball, and builds source
         tarball/zip for expansion with a castor-x.x directory (contributed
         by Kevin Burton)

Examples: Upgraded the JDO example to produce XML output of the query results
         using a Marshaller and the Xerces Serializer.

Examples: Example of XML-Servlet using JDO to load products from the database,
         XML to fire SAX events and the XML-Servlet to apply XSLT transformation
         and produce the HTML page.
    </pre></section>
    <section title="Version 0.7.10  March 3, 2000"><pre>
JDO:     Upgraded to use new cache mechanism, reducing memory overhead for
         loading. Initial code base for one-many relation support.

Persist: Optimization to the cache mechanism. Now uses fixed-size arrays to
         hold cached objects, eliminating much of the use of handlers.
         Also cleaned some of the API calls.

Persist: The cache mechanism now supports class-level resolution, allowing
         different cache properties for different class types.

Persist: Added initial support for one-many relations. Currently not working,
         but the query engine has been revised to deal with one-many
         relations, and some tests have been working successfully.

Persist: Query mechanism no longer supports scrolling to a particular point,
         due to the need to efficiently retrieve related records.

Mapping: Minor changes to accomodate better creation of relation handlers.
    </pre></section>
    <section title="Version 0.7.9  February 25, 2000"><pre>
JDO:     Now loads JDO configuration file from ODMG.loadDatabase() which in
         turn loads all the required mapping files. Added jdo-conf DTD which
         has been separated from the mapping DTD. For more info see the JDO
         example.

JDO:     Supports the new mapping API, new mapping DTD. See the JDO example
         for using the new mapping file.

JDO:     Cleaned up SQLEngine query composer using QueryExpr. Will be able to
         support different join and locking syntaxes in the future.

JDO:     Access mode (shared, exclusive, read-only) is now specified at the
         class level in the mapping file and not in the database level as
         before. This allows one transaction to support multiple type of
         locks depending on the object being used.

XML:     A Castor JAR with just the XML module will be created from the
         'jar' target (less than half the size) and also available from
         the FTP.

XML:     Better error reporting in exceptions.

Mapping: The API for the mapping package has been finalized. Both JDO and DAX
         use the new API, XML support is in the works.

Persist: Added support for relations (one-one, one-many) in loading,
         creating and deleting of objects. Related objects are now loaded
         from the cache, reloaded only when necessary, locked appropriately.

Misc:    New Ant and build.xml include 100% Java Tar task, improved Javadoc
         task, now also generates zips for binary and source distribution,
         new cvs task gets last snapshot from CVS.
    </pre></section>
    <section title="Version 0.7.8  February 10, 2000"><pre>
XML:    If annotations are used within elements, or attributes, I add
        these to the Javadoc comments of the generated source.
        example:
        &lt;attribute name="foo" type="string"&gt;
           &lt;annotation&gt;
              &lt;info&gt;
                This comment will be included in the Java source
              &lt;/info&gt;
           &lt;/annotation&gt;
        &lt;/attribute&gt;

JDO:     Fixed bug in SQLEngine not deleting row. (Contributed by
         Oleg Nitz)

JDO:     Fixed examples not setting reference of related class for
         Inventory (Contributed by Steve Muench)

XML:     Fixed bug with package name for top-level types, reported by
         Kevin Burton

XML:     Added support for "annotation" as a child for most of the structures.

XML:     Added more support for "datatype"
    </pre></section>
    <section title="Version 0.7.7  February 4, 2000"><pre>
XML:     Changed "archetype" to "type" in accordance with the 19991217
         XML Schema draft

XML:     Added support for "datatype"

XML:     Fixed a bug with the Base64 encoder which caused it to throw an
         ArrayIndexOutOfBounds exception when it recieved a zero-length array

JDO:     Test for duplicate primary key only if select operation failed
         using either the SQL state (X/Open error code) or by running a
         separate select statement. (Contributed by Oleg Nitz)

Persist: Added scrolling capability to QueryResult and PersistenceQuery
         allowing more efficient collection implementation on top of JDBC
         drivers that support cursors. (Idea by Oleg Nitz)

Persist: Application level APIs now deal with PersistenceEngine and not
         with CacheEngine directly. All classes that extended CacheEngine
         have been eliminated.

Persist: Added an SPI package that defines interfaces for Castor
         service providers (i.e. persistence implementations).

Persist: Added support for XA transactions through an XAResouceImpl that
         manages transaction context creation and association. Interface
         initially used in DAX.

Misc:    New verion of Xerces (1.0.2+) and XSL:P included in this build.
         The Xerces update fixes several HTML printing problems, the XSL:P
         build included in this release is 4x faster.
    </pre></section>
    <section title="Version 0.7.6  February 2, 2000"><pre>
DAX:  First appearance of the DAX implementation based on the Mozilla
      Directory SDK, using the persistence cache engine and the new
      mapping DTD.

Mapping: The mapping package has been upgraded to the new mapping DTD,
      and gained an XML sub-package that can be used to serialize
      mapping information. MappingResolver and MappingHelper are used
      to convert mapping files into descriptors.

Mapping: Added type strings (array of String) and big-integer
      (java.math.BigInteger).

Docs: Contents of readme file and changelog are now available from the
      HTML documentation.
    </pre></section>
    <section title="Version 0.7.5  January 28, 2000"><pre>
JDO:  Finalized the transaction and locking semantics and started working
      on a document describing it. I would like to thank Chris Raber of
      GemStone for validating some of the design choices.

JDO:  SQLEngine now employs two schemes for detecting duplicate primary
      keys. For some databases it will use a separate SELECT statement,
      for those that properly return an SQL error it will use the X/Open
      error code (contributed by Oleg Nitz).

JDO:  Dirty check mechanism has been disabled since 0.7.4, although
      the new API enables any number of approaches. The dirty check
      mechanisms will be re-introduced in 0.7.6.

JDO:  Duplicate keys are now only detected inside a transaction, unless
      a similar object is locked by another transaction, fixing a
      potential problem in duplicate key reporting when object is
      removed from persistence storage directly.

Persist: Fixed deadlock detection algorithm. Previous algorithm would
      allow the second transaction to commit but rollback the first
      one. New algorithm allows first transaction to complete, but
      detects deadlock in second one and terminates it.

CMP:  No CMP engine yet, but the design architecture has been reviewed
      by RMH and supports the proper CMP semantics. Still need to
      determine how to deal with out-of-transaction methods. New
      architecture allows Castor to be used as CMP or BMP implementation.

Docs: Finally there. Added an Ant taskdef (style) and a task (doc) to
      produce documenation in build/doc and the doc JAR. Sources are
      XML, output is HTML, magic is XSLT.

Docs: Added document describing persistence architecture and started
      working on document describing transaction and locking semantics.

Misc: The examples have been broken to two packages: examples will contain
      brief and illustrative code showing how to develop with Castor,
      while tests will contain unit tests.
    </pre></section>
    <section title="Version 0.7.4  January 23, 2000"><pre>
JDO:  New persistence engine. JDO package is now an ODMG API
      implementation on top of the concurrency engine and an SQL 92
      connector.

JDO:  New query mechanism allows multiple objects to be retrieved as
      an enumeration.

JDO:  Revised concurrency engine with query mechanism, object caching,
      transactions and locking, now resides in package
      org.exolab.castor.persist.

JDO:  Added SQL type conversion. A field mapping may now specify the
      SQL datatype using SQL names (numeric, varchar, etc). If the SQL
      type differs than the Java field type automatic conversion will
      apply. Convertors are provided for short/int/long, float/double,
      string, character/byte array, date and BigDecimal.

JDO:  Added dirty check attribute to field mapping. Fields that are
      marked for dirty check will be checked against the database to
      prevent concurrent updates. A concurrent update attempt will
      cause the transaction to rollback. When acquiring an exclusive
      lock at the beginning of the transaction no dirty checking
      occurs.

XML:  Added support for positive-integer and negative-integer
      (Source Generator)

XML:  Added support for Validation during Unmarshalling. Enabled by
      default.  (Marshalling Framework)

XML:  Changed Exceptions from SAXException and IOException to
      MarshalException and ValidationException (Framework + Source
      Generator) -- Sorry for the inconvenience.

Docs: This is the first release to see some documentation beyond the
      README file. The docs are located in the directory src/doc in XML
      and are transformed into HTML in the target directory build/doc.
      The transformation stylesheets are contained in src/doc/style.

Misc: Three layer persistence architecture introduced in this release.
      Each package implements the top level applications API (EJB,
      ODMG, DAX, JNDI), org.exolab.castor.persist implements the
      concurrency layer (transaction, locking, caching) and connectors
      are used to talk to the underlying persistent storage.

Misc: ObjectDesc, FieldDesc and related classed have no been
      consolidated from the three modules and placed in a single
      package org.exolab.castor.mapping.

Misc: FieldDesc adds required flag and readable/writeable flag.
      ObjectDesc adds key field (formerly JDO primary key) that is
      used across all the modules.

Misc: Type conversion errors are now reported more accurately before,
      and a type conversion mechanism is being concieved.
    </pre></section>
  </body>
</document>
