<project name="Castor" default="main" basedir=".">
  <property name="project" value="castor" />

  <property name="source" value="src" />
  <property name="main" value="${source}/main" />
  <property name="etc" value="${source}/etc" />
  <property name="build" value="build" />
  <property name="classes" value="${build}/classes" />
  <property name="dist" value="dist" />
  <property name="lib" value="lib" />
  <property name="doc" value="${source}/doc" />
  <property name="schema" value="${source}/schema" />

  <property name="classpath" value="${classpath}:${classes}" />
  <property name="build.compiler" file="classic" />
  <property name="deprecation" value="true" />
  <property file="${etc}/VERSION" />
  <property name="archive" value="${project}-${version}" />

 
  <target name="targets">
    <echo message="ANT build for ${project} ${version}\n
\nThe following targets are available:\n
\n  targets  Lists the build targets
\n  clean    Cleans the build and distribution directories
\n  all      Cleans and builds all the packages and examples
\n  release  Cleans and builds all the release packages
\n           (JAR, source, doc, tarball) in the dist directory
\n  main     Builds the main packages (including debugging info)
\n  examples Builds the example packages (including debugging info)
\n  tests    Builds the test packages (including debugging info)
\n  jar      Builds the binary JAR in the dist directory
\n  doc      Builds the documentation
\n  javadoc  Builds the API JavaDocs
\n  source   Builds the source tarball in the dist directory
\n  tarball  Builds the binary distribution in the dist directory
\n  cvs      Update the sources from the CVS\n" />
  </target>


  <!-- Prepare target directories -->
  <target name="prepare">
    <mkdir dir="${build}"/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${dist}"/>

    <!-- Copy the DTD and schema to the schema directory -->
    <deltree dir="${schema}" />
    <mkdir   dir="${schema}" />
    <copydir src="${main}/org/exolab/castor/mapping" includes="*.dtd,*.xsd"
             dest="${schema}" />
    <copydir src="${main}/org/exolab/castor/jdo/conf" includes="*.dtd,*.xsd"
             dest="${schema}" />
    <copydir src="${main}/org/exolab/castor/dsml/schema" includes="*.dtd,*.xsd"
             dest="${schema}" />
  </target>

  <!-- Kill all the directories created in prepare -->
  <target name="clean">
    <deltree dir="${build}"/>
    <deltree dir="${dist}"/>
  </target>


  <!-- Build all the sources with debug and deprecation -->
  <target name="main" depends="prepare">
    <javac srcdir="${main}" destdir="${classes}"
           classpath="${classpath}" debug="on" deprecation="${deprecation}" />
  </target>

  <!-- Same as main, but also cleans and additional targets -->
  <target name="all" depends="clean,main,examples,tests"/>

  <!-- Same as main, but no debug and no deprecation -->
  <target name="no-debug" depends="prepare">
    <javac srcdir="${main}" destdir="${classes}"
           classpath="${classpath}" debug="off" deprecation="off" optimize="on"/>
  </target>


  <!-- Build the example packages -->
  <target name="examples" depends="prepare">
    <mkdir dir="${build}/examples" />
    <javac srcdir="${source}/examples" destdir="${build}/examples"
           classpath="${classpath}" debug="on" deprecation="${deprecation}"/>
  </target>

  <!-- Build the test packages -->
  <target name="tests" depends="prepare">
    <mkdir dir="${build}/tests" />
    <javac srcdir="${source}/tests" destdir="${build}/tests"
           classpath="${classpath}" debug="on" deprecation="${deprecation}"/>
  </target>
  

  <!-- Build a full release including JAR, zip/tarball, source and documentation -->
  <target name="release" depends="clean,jar,tarball,source,doc,javadoc">
    <jar jarfile="${dist}/${archive}-doc.jar" basedir="${build}" includes="doc/**" />
  </target>


  <!-- Build the JAR file using no-debug -->
  <target name="jar" depends="no-debug">
    <delete file="${dist}/${archive}.jar" />

    <copyfile src="${source}/etc/MANIFEST.MF" dest="${classes}/MANIFEST.MF" />
    <replace file="${classes}/MANIFEST.MF" token="$$VERSION$$" value="${version}"/>
    <copyfile src="${source}/etc/LICENSE" dest="${classes}/LICENSE" />
    <copyfile src="${source}/etc/README" dest="${classes}/README" />
    <copyfile src="${source}/etc/CHANGELOG" dest="${classes}/CHANGELOG" />

    <jar jarfile="${dist}/${archive}.jar" basedir="${classes}"
         manifest="${classes}/MANIFEST.MF" includes="LICENSE,README,CHANGELOG,org/**" />

    <jar jarfile="${dist}/${archive}-xml.jar" basedir="${classes}"
         manifest="${classes}/MANIFEST.MF" includes="LICENSE,README,CHANGELOG,
         org/exolab/castor/xml/**,org/exolab/castor/mapping/**,org/exolab/castor/util/**,
	 org/exolab/castor/*" />
  </target>


  <!-- Build the documentation -->
  <target name="doc" depends="prepare">
    <mkdir dir="${build}/doc" />
    <style basedir="${doc}" destdir="${build}/doc" style="style/exolab.xsl"
           includes="**.xml" excludes="style/**,project.xml"/>
    <copydir  src="${doc}/images" dest="${build}/doc/images"/>
    <copydir  src="${doc}/style" dest="${build}/doc/style" includes="images/**,*.css"/>
    <copyfile src="${doc}/license.txt" dest="${build}/doc/license.txt"/>
    <mkdir dir="${build}/doc/print" />
    <style basedir="${doc}" destdir="${build}/doc/print" style="style/print.xsl"
           includes="**.xml" excludes="style/**,project.xml"/>
    <copydir src="${doc}/images" dest="${build}/doc/print/images"/>
    <copyfile src="${doc}/license.txt" dest="${build}/doc/print/license.txt"/>
    <copydir src="${schema}" includes="*.dtd,*.xsd" dest="${build}/doc" />
  </target>

  <!-- Build the API JavaDoc -->
  <target name="javadoc" depends="prepare">
    <mkdir   dir="${build}/doc" />
    <deltree dir="${build}/doc/javadoc" />
    <mkdir   dir="${build}/doc/javadoc" />
    <javadoc sourcepath="${main}" destdir="${build}/doc/javadoc" dir="."
             doctitle="Castor" public="true" noindex="true" author="true"
	     packagenames="org.exolab.castor.xml, org.exolab.castor.jdo, org.exolab.castor.dax,
                           org.exolab.castor.persist.*, org.exolab.castor.mapping,
                           org.exolab.castor.dsml.*, org.exolab.castor.util" />
  </target>


  <!-- Build the source distribution -->
  <target name="source" depends="prepare">
    <delete file="${dist}/${archive}-src.tgz" />
    <delete file="${dist}/${archive}-src.zip" />
    <tar includes="*.sh, *.bat ${source}/** ${lib}/**" basedir="."
         tarfile="${dist}/${archive}-src.tar" defaultexcludes="true" />	  
    <gzip src="${dist}/${archive}-src.tar" zipfile="${dist}/${archive}-src.tgz"/>
    <delete file="${dist}/${archive}-src.tar" />
    <zip zipfile="${dist}/${archive}-src.zip" basedir="." includes="*.sh *.bat ${source}/** ${lib}/**"
         defaultexcludes="true" />         
  </target>

  <!-- Build the tarball including JAR and all dependent packages -->
  <target name="tarball" depends="prepare,jar,examples">
    <property name="bin" value="${build}/${archive}" />
    <delete   file="${dist}/${archive}.tgz" />
    <delete   file="${dist}/${archive}.zip" />
    <deltree  dir="${bin}" />
    <mkdir    dir="${bin}" />
    <copyfile src="${etc}/README"
              dest="${bin}/README" />
    <copyfile src="${etc}/LICENSE"
              dest="${bin}/LICENSE" />
    <copyfile src="${etc}/CHANGELOG"
              dest="${bin}/CHANGELOG" />
    <copyfile src="${dist}/${archive}.jar"
              dest="${bin}/${archive}.jar" />
    <copyfile src="${dist}/${archive}-xml.jar"
              dest="${bin}/${archive}-xml.jar" />
    <copyfile src="${lib}/jdbc-se2.0.jar"
              dest="${bin}/jdbc-se2.0.jar" />
    <copyfile src="${lib}/jndi.jar"
              dest="${bin}/jndi.jar" />
    <copyfile src="${lib}/ldapjdk.jar"
              dest="${bin}/ldapjdk.jar" />
    <copyfile src="${lib}/ldapsp.jar"
              dest="${bin}/ldapsp.jar" />
    <copyfile src="${lib}/odmg-3.0.jar"
              dest="${bin}/odmg-3.0.jar" />
    <copyfile src="${lib}/xerces.jar"
              dest="${bin}/xerces.jar" />
    <copyfile src="${lib}/jta1.0.1.jar"
              dest="${bin}/jta1.0.1.jar" />
    <copydir  src="${schema}" dest="${bin}/schema" />

    <tar includes="examples/**" basedir="${source}"
         tarfile="${bin}/examples.tar" defaultexcludes="true" />	  
    <gzip src="${bin}/examples.tar" zipfile="${bin}/examples.tgz"/>
    <delete file="${bin}/examples.tar" />

    <tar includes="${archive}/**" basedir="${build}"
         tarfile="${dist}/${archive}.tar" defaultexcludes="true" />	  
    <gzip src="${dist}/${archive}.tar" zipfile="${dist}/${archive}.tgz"/>
    <delete file="${dist}/${archive}.tar" />

    <zip zipfile="${bin}/examples.zip" basedir="${source}" includes="examples/**"
         defaultexcludes="true" />
    <zip zipfile="${dist}/${archive}.zip" basedir="${build}" includes="${archive}/**"
         excludes="*/examples.tgz" />
  </target>


  <!-- Update the sources from the CVS -->
  <target name="cvs" depends="clean">
    <cvs cvsRoot=":pserver:arkin@virtuals.exoffice.com:/cvs/${project}"
         dest="." package="${project}" />
  </target>


</project>






