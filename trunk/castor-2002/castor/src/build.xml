<project name="Castor" default="main" basedir=".">
  <property name="project" value="castor" />

  <property name="source" value="src" />
  <property name="etc" value="src/etc" />
  <property name="build" value="build" />
  <property name="classes" value="${build}/classes" />
  <property name="dist" value="dist" />
  <property name="lib" value="lib" />
  <property name="doc" value="src/doc" />

  <property name="classpath" value="${classpath}:${classes}" />
  <property name="build.compiler" file="classic" />
  <property name="deprecation" value="true" />
  <property file="${etc}/VERSION" />
  <property name="archive" value="${project}-${version}" />

 
  <target name="targets">
    <echo message="ANT build for ${project} ${version}\n
\nThe following targets are available:\n
\n  targets  Lists the build targets
\n  clean    Cleans the build and distribution directories
\n  all      Cleans and builds all the packages and examples
\n  release  Cleans and builds all the release packages
\n           (JAR, source, doc, tarball) in the dist directory
\n  main     Builds the main packages (including debugging info)
\n  examples Builds the example packages (including debugging info)
\n  tests    Builds the test packages (including debugging info)
\n  jar      Builds the binary JAR in the dist directory
\n  doc      Builds the documentation
\n  javadoc  Builds the API JavaDocs
\n  source   Builds the source tarball in the dist directory
\n  tarball  Builds the binary distribution (Castor and all
\n           dependent libraries) in the dist directory\n" />
  </target>


  <!-- Prepare target directories -->
  <target name="prepare">
    <mkdir dir="${build}"/>
    <mkdir dir="${classes}"/>
    <mkdir dir="${dist}"/>
  </target>

  <!-- Kill all the directories created in prepare -->
  <target name="clean">
    <deltree dir="${build}"/>
    <deltree dir="${dist}"/>
  </target>


  <!-- Build all the sources with debug and deprecation -->
  <target name="main" depends="prepare">
    <javac srcdir="${source}/main" destdir="${classes}"
           classpath="${classpath}" debug="on" deprecation="${deprecation}" />
  </target>

  <!-- Same as main, but also cleans and additional targets -->
  <target name="all" depends="clean,main,examples,tests"/>

  <!-- Same as main, but no debug and no deprecation -->
  <target name="no-debug" depends="prepare">
    <javac srcdir="${source}/main" destdir="${classes}"
           classpath="${classpath}" debug="off" deprecation="off"/>
  </target>


  <!-- Build the example packages -->
  <target name="examples" depends="prepare">
    <mkdir dir="${build}/examples" />
    <javac srcdir="${source}/examples" destdir="${build}/examples"
           classpath="${classpath}" debug="on" deprecation="${deprecation}"/>
  </target>

  <!-- Build the test packages -->
  <target name="tests" depends="prepare">
    <mkdir dir="${build}/tests" />
    <javac srcdir="${source}/tests" destdir="${build}/tests"
           classpath="${classpath}" debug="on" deprecation="${deprecation}"/>
  </target>


  <!-- Build a full release including JAR, tarball, source and documentation -->
  <target name="release" depends="clean,jar,tarball,source,doc,javadoc">
    <jar jarfile="${dist}/${archive}-doc.jar" basedir="${build}" items="doc" />
  </target>


  <!-- Build the JAR file using no-debug -->
  <target name="jar" depends="no-debug">
    <deltree dir="${dist}/${archive}.jar" />

    <copyfile src="${source}/etc/MANIFEST.MF" dest="${classes}/MANIFEST.MF" />
    <replace file="${classes}/MANIFEST.MF" token="$$VERSION$$" value="${version}"/>
    <copyfile src="${source}/etc/LICENSE" dest="${classes}/LICENSE" />
    <copyfile src="${source}/etc/README" dest="${classes}/README" />
    <copyfile src="${source}/etc/CHANGELOG" dest="${classes}/CHANGELOG" />

    <jar jarfile="${dist}/${archive}.jar" basedir="${classes}"
         manifest="${classes}/MANIFEST.MF" items="LICENSE,README,CHANGELOG,org" />
  </target>


  <!-- Build the documentation -->
  <target name="doc" depends="prepare">
    <mkdir dir="${build}/doc" />
    <style srcdir="${source}/doc" destdir="${build}/doc"
           exclude="project.xml" style="style/exolab.xsl"/>
    <mkdir dir="${build}/doc/print" />
    <style srcdir="${source}/doc" destdir="${build}/doc/print"
           exclude="project.xml,style,images" style="style/print.xsl"/>
  </target>

  <!-- Build the API JavaDoc -->
  <!-- Note: you need the proper permission to get it running -->
  <target name="javadoc" depends="prepare">
    <mkdir dir="${build}/doc" />
    <mkdir dir="${build}/doc/javadoc" />
    <javadoc2 sourcepath="${source}/main" destdir="${build}/doc/javadoc"
              doctitle="Castor" public="true" noindex="true" author="true"
	      packagenames="org.exolab.castor.xml,org.exolab.castor.jdo,org.exolab.castor.dax,
                            org.exolab.castor.persist,org.exolab.castor.util,
                            org.exolab.castor.dsml,org.exolab.castor.dsml.jndi,org.exolab.castor.dsml.mozilla,
                            org.exolab.castor.dsml.tools" />
  </target>


  <!-- Build the source distribution -->
  <target name="source" depends="prepare">
    <deltree dir="${dist}/${archive}-src.tar.gz" />
    <exec command="tar --create --compress --exclude-from ${source}/etc/exclude
                   *.sh *.bat ${source} ${lib}"
          dir="." output="${dist}/${archive}-src.tgz" />
  </target>


  <!-- Build the tarball including JAR and all dependent packages -->
  <target name="tarball" depends="prepare,jar,examples">
    <property name="bin" value="${build}/${archive}" />
    <deltree  dir="${dist}/${archive}.tar.gz" />
    <deltree  dir="${bin}" />
    <mkdir dir="${bin}" />
    <copyfile src="${etc}/README"
              dest="${bin}/README" />
    <copyfile src="${etc}/LICENSE"
              dest="${bin}/LICENSE" />
    <copyfile src="${etc}/CHANGELOG"
              dest="${bin}/CHANGELOG" />
    <copyfile src="${dist}/${archive}.jar"
              dest="${bin}/${archive}.jar" />
    <copyfile src="${lib}/jdbc-se2.0.jar"
              dest="${bin}/jdbc-se2.0.jar" />
    <copyfile src="${lib}/jndi.jar"
              dest="${bin}/jndi.jar" />
    <copyfile src="${lib}/ldapjdk.jar"
              dest="${bin}/ldapjdk.jar" />
    <copyfile src="${lib}/ldapsp.jar"
              dest="${bin}/ldapsp.jar" />
    <copyfile src="${lib}/odmg-3.0.jar"
              dest="${bin}/odmg-3.0.jar" />
    <copyfile src="${lib}/xerces.jar"
              dest="${bin}/xerces.jar" />
    <copyfile src="${lib}/jta1.0.1.jar"
              dest="${bin}/jta1.0.1.jar" />
    <copydir  src="${source}/schema" dest="${bin}/schema" />
    <exec command="tar --create --compress --directory ${source}
                       --exclude-from ${source}/etc/exclude examples"
          dir="." output="${bin}/examples.tgz" />
    <exec command="tar --create --compress --directory ${build} ${archive}"
          dir="." output="${dist}/${archive}.tgz" />
  </target>


</project>

